---
import { Image} from "astro:assets";
import { Layout } from 'virtual:astro-blog/components'
import { type ArticleSchemaTransformed } from "../../schema/ArticleSchema";

import Breadcrumbs from "../Breadcrumbs.astro";
import type { AstroBlogUserConfig } from "../../schema/UserConfigSchema";

type Props = {
    article: ArticleSchemaTransformed;
    config: AstroBlogUserConfig;
}

const { article, config } = Astro.props as Props
---

<Layout title={ article.title } description={ article.description } seo={article.seo} {config}>
    <div class="blog-post">
        <Breadcrumbs breadcrumbs={[{href: '/', text: 'Home'}, {href: '/blog', text: 'Blog'}, {text: article.title}]} />
        <div class="md:grid md:grid-cols-[min-content_1fr] md:gap-8">
            <div>
                {
                    !!article.imageSrc && (
                        <Image src={article.imageSrc} alt={article.imageAlt || ''} class="h-64 rounded-[20px] object-cover md:max-w-xs drop-shadow-lg" />
                    )
                }
                <p class="mt-4">ðŸ“… { article.datePublished }</p>
                <p class="font-bold font-display text-xl my-4">{ article.title }</p>
                <p>{ article.description }</p>

                <hr class="border-none py-4">

                {
                    (!!article.author && !!article.author.name) && (
                        <>
                            <span class="block text-lg font-bold">Author:</span>
                            <p class="block mb-4">{ article.author.name || 'Author' }</p>
                            {
                                !!article.author.imageSrc && <Image src={ article.author.imageSrc } alt={ article.author.imageAlt || article.author.name } class="w-1/2 aspect-square rounded-full block mb-4 drop-shadow-lg" />
                            }

                            {
                                !!article.author.description && <p class="block mb-4">{ article.author.description }</p>
                            }

                            <hr class="border-none py-4">
                        </>
                    )
                }


                <span class="block mb-2 text-lg font-bold">Tags:</span>
                <div class="flex flex-wrap items-center">
                    {
                        article.tags.map(tag => (
                            <span class="px-4 py-1 rounded-full bg-rose-400 shadow" style={`background-color: ${ tag.bgColor }; color: ${ tag.textColor }`}>{ tag.tag }</span>
                        ))
                    }
                </div>
            </div>
            <div>
                <slot />
            </div>
        </div>
    </div>
</Layout>
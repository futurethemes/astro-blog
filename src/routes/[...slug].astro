---
import { getCollection } from 'astro:content';
import Config from 'virtual:astro-blog/user-config'
import { type ArticleContentCollectionData, type ArticleSchemaTransformed } from '../schema/ArticleSchema'
import ArticleLayout from '../components/blog/ArticleLayout.astro';
import { transformContentCollection } from '../utils/content-collection'

type Props = {
    entry: ArticleSchemaTransformed,
}

export async function getStaticPaths() {
    const blogEntries = await getCollection('blog')

    const routes = []

    for (const entry of blogEntries) {
        routes.push({
            params: {
                slug: entry.slug,
            },
            props: {
                entry: await transformContentCollection(entry as ArticleContentCollectionData),
            },
        })
    }

    return routes
}

const { entry } = Astro.props
const { Content } = await entry.render()
---

<ArticleLayout article={entry} config={ Config }>
    <Content />
</ArticleLayout>

<style is:global>
    .blog-post h1 {
        @apply text-2xl font-black;
    }

    .blog-post h2 {
        @apply text-xl font-bold;
    }

    .blog-post h3 {
        @apply text-lg font-semibold;
    }

    .blog-post :where(h1, h2, h3, h4, h5, h6, p) {
        @apply mb-2;
    }

    .blog-post :where(h1, h2, h3, h4, h5, h6) {
        @apply mt-4;
    }
</style>
---
import { getCollection } from 'astro:content'
import { Layout } from 'virtual:astro-blog-plugin/components'
import FeaturedBlogArticle from '../components/blog/FeaturedBlogArticle.astro'
import BlogPost from '../components/blog/BlogPost.astro'
import { type BlogSchemaTransformed, type BlogSchemaRaw, type BlogContentCollectionData } from '../schema/BlogSchema'
import Config from 'virtual:astro-blog-plugin/user-config'
import { transformContentCollection } from '../utils/content-collection'

const { paginateSize } = Config

const blogCollection = await getCollection('blog')

let blogArticles: Array<BlogSchemaTransformed> = blogCollection.map(entry => {
    return transformContentCollection(entry as BlogContentCollectionData);
})

const featuredArticle = blogArticles[0]

let paginated = false

if (blogArticles.length > paginateSize) {
    paginated = true

    blogArticles = blogArticles.toSpliced(0, paginateSize)
}

---

<Layout title="Blog">
    <h2 class="mt-8 mb-4 text-xl text-slate-200">Featured Article</h2>
    <FeaturedBlogArticle post={{ ...featuredArticle  }} />
    <hr class="my-8 border-slate-200/50">
    <div class="grid grid-cols-1 md:grid-cols-2 gap-8">
        {
            blogArticles.map(article => (
                <BlogPost post={{ ...article }} />
            ))
        }
    </div>
    {
        paginated && <div class="flex items-center content-center justify-end gap-4 px-4">
            <a href={ '/blog/1' } class="bg-indigo-500 rounded-full px-4 py-2">Next Page</a>
        </div>
    }
</Layout> 
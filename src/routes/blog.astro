---
import { getCollection } from 'astro:content'
import { Layout } from 'virtual:astro-blog/components'
import FeaturedArticle from '../components/blog/FeaturedArticle.astro'
import ArticleCard from '../components/blog/ArticleCard.astro'
import { type ArticleSchemaTransformed, type ArticleContentCollectionData } from '../schema/ArticleSchema'
import Config from 'virtual:astro-blog/user-config'
import { transformContentCollection } from '../utils/content-collection'

const { paginateSize, blogRoot } = Config

const blogCollection = await getCollection('blog')

let blogArticles: Array<ArticleSchemaTransformed> = []
    
for (const entry of blogCollection) {
    if (entry.data.isDraft) {
        continue
    }
    
    blogArticles.push(await transformContentCollection(entry as ArticleContentCollectionData))
}

let featuredArticle = blogArticles.find(article => article.featured) || blogArticles[0]

let paginated = false

if (blogArticles.length > paginateSize) {
    paginated = true

    blogArticles = blogArticles.toSpliced(0, paginateSize)
}
---

<Layout title="Blog" seo={{...blogRoot?.seo}} config={Config}>
    <h2 class="mt-8 mb-4 text-xl text-slate-200">Featured Article</h2>
    <FeaturedArticle article={{ ...featuredArticle  }} />
    <hr class="my-8 border-slate-200/50">
    <div class="grid grid-cols-1 md:grid-cols-2 gap-8">
        {
            blogArticles.map(article => (
                <ArticleCard article={{ ...article }} />
            ))
        }
    </div>
    {
        paginated && <div class="flex items-center content-center justify-end gap-4 px-4">
            <a href={ '/blog/1' } class="bg-indigo-500 rounded-full px-4 py-2">Next Page</a>
        </div>
    }
</Layout>